{"version":3,"sources":["components/Cardheader.js","components/Input.js","components/InputPassword.js","components/Cardbody.js","App.js","reportWebVitals.js","index.js"],"names":["Cardheader","React","createElement","Fragment","className","href","width","height","viewBox","fill","xmlns","d","Input","props","name","id","input","type","onChange","checked","valcheck","touched","onBlur","val","setVal","useState","useEffect","htmlFor","concat","style","border","value","event","target","data-name","InputPassword","open","setOpen","checkword","setCheckword","checknum","setChecknum","length","test","onClick","cx","cy","r","stroke","strokeLinecap","strokeLinejoin","Cardbody","handleChange","firstname","setFirstname","lastname","setLastname","email","setEmail","password","setPassword","account","setAccount","setTouched","firstName","lastName","setValcheck","hint","setHint","require","handleBlur","e","[object Object]","handleValidate","prevFormData","action","transform","clipPath","onSubmit","checktype","Object","values","every","it","alert","App","formData","setFormData","CardHeader","CardBody","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.8a1d8804.chunk.js","sourcesContent":["import React from \"react\";\n\n\nfunction Cardheader() {\n    return (\n        <>\n            <div className=\"card-header\">\n                <a href='https://www.google.com' className=\"link-black\">\n                    <svg width=\"13\" height=\"9\" viewBox=\"0 0 13 9\" fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M0.646446 4.14645C0.451184 4.34171 0.451184 4.65829 0.646446 4.85355L3.82843 8.03553C4.02369 8.2308 4.34027 8.2308 4.53553 8.03553C4.7308 7.84027 4.7308 7.52369 4.53553 7.32843L1.70711 4.5L4.53553 1.67157C4.7308 1.47631 4.7308 1.15973 4.53553 0.964466C4.34027 0.769204 4.02369 0.769204 3.82843 0.964466L0.646446 4.14645ZM13 4L1 4V5L13 5V4Z\"\n                            fill=\"black\" />\n                    </svg>\n                    Back\n                </a>\n            </div>\n        </>\n    )\n};\n\nexport default Cardheader;","import React, { useState, useEffect } from \"react\";\n\nfunction Input(props) {\n    const { name, id, input, type, onChange, checked, valcheck,touched, onBlur } = props;\n    // const [inputValue, setInputValue] = useState('');\n    const [val, setVal] = useState(input ? true : false); // 初始值取决于 input\n\n    const handleChange = (event) => {\n        if (event.target.value) {\n            setVal(true);\n        } else {\n            setVal(false);\n        }\n        if (onChange) {\n            onChange(event);\n        }\n    };\n\n\n    useEffect(() => {\n        if (type !== 'checkbox') {\n            setVal(input ? true : false);\n        }\n    }, [input, type, checked]);\n\n    return (\n        <label htmlFor={id} \n            className={`input-default ${val ? 'ok' : ''}`}\n            style={{ border: (valcheck && touched) ? '1px solid red' : 'none' }}>\n            <input\n                type={type}\n                name={id}\n                id={id}\n                value={input}\n                onBlur={onBlur}\n                onChange={handleChange}\n                checked={checked}\n            />\n            <span data-name={name}></span>\n        </label>\n    );\n}\n\nexport default Input;\n","import React, { useState } from \"react\";\n\nfunction InputPassword(props) {\n    const { name, id, input, onChange, valcheck = 0, onBlur } = props;\n    const [val, setVal] = useState(input ? true : false); // Input\n    const [open, setOpen] = useState(false);\n    const [checkword, setCheckword] = useState('var(--grey)'); // 驗證密碼位數\n    const [checknum, setChecknum] = useState('var(--grey)');   // 驗證密碼數字\n\n    // input change\n    const handleChange = (event) => {\n        // 密碼是否可看\n        if (event.target.value) {\n            setVal(true);\n        } else {\n            setVal(false);\n        }\n        // 輸入\n        if (onChange) {\n            onChange(event); // 綁定\n            if ((event.target.value).length >= 8) {\n                setCheckword('#4AE7A5');\n            } else {\n                setCheckword('var(--grey)');\n            }\n            if (/\\d/.test(event.target.value)) {\n                setChecknum('#4AE7A5');\n            } else {\n                setChecknum('var(--grey)')\n            }\n        }\n    };\n\n    return (\n        <>\n            <div className=\"row col\">\n                <label htmlFor={id}\n                    className={`input-default ${val ? 'ok' : ''}`}\n                    style={{ border: valcheck ? '1px solid red' : 'none' }}>\n                    <input\n                        type={open ? 'text' : 'password'}\n                        name={id}\n                        id={id}\n                        value={input}\n                        onBlur={onBlur}\n                        onChange={handleChange}\n                    />\n                    <span data-name={name}></span>\n                    <button type=\"button\" onClick={() => setOpen(!open)} className={`check-eye ${open ? 'open' : ''}`}>\n                        <svg width=\"19\" height=\"20\" viewBox=\"0 0 19 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M18.8792 9.63021C18.7095 9.39802 14.6652 3.94482 9.49991 3.94482C4.33461 3.94482 0.290122 9.39802 0.120569 9.62999C-0.0401895 9.85027 -0.0401895 10.149 0.120569 10.3693C0.290122 10.6015 4.33461 16.0547 9.49991 16.0547C14.6652 16.0547 18.7095 10.6015 18.8792 10.3695C19.0402 10.1493 19.0402 9.85027 18.8792 9.63021ZM9.49991 14.802C5.69511 14.802 2.39976 11.1826 1.42426 9.99934C2.39849 8.81507 5.68695 5.19757 9.49991 5.19757C13.3045 5.19757 16.5996 8.81633 17.5756 10.0002C16.6013 11.1844 13.3129 14.802 9.49991 14.802Z\" fill=\"#757575\" />\n                            <path d=\"M9.49991 6.2417C7.42765 6.2417 5.74165 7.92769 5.74165 9.99996C5.74165 12.0722 7.42765 13.7582 9.49991 13.7582C11.5722 13.7582 13.2582 12.0722 13.2582 9.99996C13.2582 7.92769 11.5722 6.2417 9.49991 6.2417ZM9.49991 12.5054C8.11833 12.5054 6.99443 11.3815 6.99443 9.99996C6.99443 8.61841 8.11836 7.49448 9.49991 7.49448C10.8815 7.49448 12.0054 8.61841 12.0054 9.99996C12.0054 11.3815 10.8815 12.5054 9.49991 12.5054Z\" fill=\"#757575\" />\n                        </svg>\n                    </button>\n                </label>\n            </div>\n            <div className={`row ps-group ${!open ? 'd-none' : ''}`} >\n                <span className=\"ps-type\">\n                    <svg width=\"11\" height=\"11\" viewBox=\"0 0 11 11\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <circle cx=\"5.5\" cy=\"5.5\" r=\"5.5\" fill={checkword} />\n                        <path d=\"M3 6.18182L5.08333 8L8 4\" stroke=\"white\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                    </svg>\n                    8 Characters min.</span>\n                <span className=\"ps-type\">\n                    <svg width=\"11\" height=\"11\" viewBox=\"0 0 11 11\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <circle cx=\"5.5\" cy=\"5.5\" r=\"5.5\" fill={checknum} />\n                        <path d=\"M3 6.18182L5.08333 8L8 4\" stroke=\"white\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                    </svg>\n                    One number</span>\n            </div>\n        </>\n    );\n}\n\nexport default InputPassword;\n","import React, { useState } from \"react\";\nimport Input from \"./Input\";\nimport InputPassword from './InputPassword';\n\nfunction Cardbody(props) {\n    // Pre-Data\n    const { handleChange } = props;\n    // Form-Data\n    const [firstname, setFirstname] = useState('');\n    const [lastname, setLastname] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [account, setAccount] = useState(false);\n    // Touch\n    const [touched, setTouched] = useState({\n        firstName: false,\n        lastName: false,\n        email: false,\n        password: false,\n    });\n    const [valcheck, setValcheck] = useState({\n        firstname: 0,\n        lastname: 0,\n        email: 0,\n        password: 0,\n    });\n    // Danger-Hint(span display-style)\n    const [hint, setHint] = useState({\n        require: 0,\n    });\n    // ==================================== //\n    // Verify(red border-style)\n    const handleBlur = (e) => {\n        const { name } = e.target;\n        setTouched({ ...touched, [name]: true });\n        handleValidate();\n    };\n    const handleValidate = () => {\n        // border-error\n        setValcheck((prevFormData) => ({\n            ...prevFormData,\n            firstname: firstname === '' ? 1 : 0,\n            lastname: lastname === '' ? 1 : 0,\n            email: /^\\S+@\\S+\\.\\S+$/.test(email) ? 0 : 1,\n        }));\n    };\n\n    // 點擊SUBMIT\n    const onSubmit = () => {\n        let new_formdata = {\n            firstname: firstname,\n            lastname: lastname,\n            email: email,\n            password: password,\n            checktype: account,\n        };\n\n        //傳回資料\n        handleChange(new_formdata);\n\n        if ((password).length >= 8 && /\\d/.test(password)) {\n            setValcheck((prevFormData) => ({\n                ...prevFormData,\n                password: 0,\n            }));\n        } else {\n            setValcheck((prevFormData) => ({\n                ...prevFormData,\n                password: 1,\n            }));\n        };\n        // 例外處理\n        setTouched({\n            firstName: true,\n            lastName: true,\n            email: true,\n            password: true,\n        });\n        handleValidate();\n        setHint(() => ({\n            require: Object.values(valcheck).every(it => it === 0) ? 0 : 1,\n        }));\n        if(Object.values(valcheck).every(it => it === 0)){\n            alert(\"OK!\")\n        }\n    };\n\n    return (\n        <>\n            <div className=\"card-body\">\n                <form action=\"\">\n                    <h2>\n                        Start from free\n                    </h2>\n                    <h1>\n                        Create an account\n                    </h1>\n                    {/* 錯誤提示文字 */}\n                    <div className={`row danger-hint ${hint.require ? '' : 'd-none'}`} >\n                        <svg width=\"25\" height=\"24\" viewBox=\"0 0 25 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path fill=\"#D71920\" d=\"M12.5 2C6.9775 2 2.5 6.4775 2.5 12C2.5 17.5225 6.9775 22 12.5 22C18.0225 22 22.5 17.5225 22.5 12C22.5 6.4775 18.0225 2 12.5 2ZM13.75 18.25H11.25V15.75H13.75V18.25ZM13.75 14.5H11.25V7H13.75V14.5Z\" />\n                        </svg>\n                        Please complete all the required fields to proceed.\n                    </div>\n                    <div className=\"row col-2\">\n                        <button type=\"button\" className=\"btn-default\">\n                            <svg width=\"16\" height=\"16\" style={{ transform: 'translateY(1px)' }} viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path\n                                    d=\"M8 6.4V9.6H12.5264C11.8656 11.4624 10.0864 12.8 8 12.8C5.3536 12.8 3.2 10.6464 3.2 8C3.2 5.3536 5.3536 3.2 8 3.2C9.1472 3.2 10.2512 3.6112 11.1088 4.3584L13.2112 1.9456C11.7712 0.6912 9.9216 0 8 0C3.5888 0 0 3.5888 0 8C0 12.4112 3.5888 16 8 16C12.4112 16 16 12.4112 16 8V6.4H8Z\"\n                                />\n                            </svg>\n                            Sign up with Google\n                        </button>\n                        <button type=\"button\" className=\"btn-default\">\n                            <svg width=\"17\" height=\"16\" style={{ transform: 'translateY(1px)' }} viewBox=\"0 0 17 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <g clipPath=\"url(#clip0_7326_43)\">\n                                    <path\n                                        d=\"M11.1647 2.65667H12.6253V0.112667C12.3733 0.078 11.5067 0 10.4973 0C8.39133 0 6.94867 1.32467 6.94867 3.75933V6H4.62467V8.844H6.94867V16H9.798V8.84467H12.028L12.382 6.00067H9.79733V4.04133C9.798 3.21933 10.0193 2.65667 11.1647 2.65667Z\"\n                                    />\n                                </g>\n                                <defs>\n                                    <clipPath id=\"clip0_7326_43\">\n                                        <rect width=\"16\" height=\"16\" fill=\"white\" transform=\"translate(0.5)\" />\n                                    </clipPath>\n                                </defs>\n                            </svg>\n                            Sign up with Facebook\n                        </button>\n                    </div>\n                    <h4>Or use your email for registration &nbsp;</h4>\n                    <div className=\"row col-2\">\n                        <Input name=\"First Name\"\n                            id=\"firstName\" type=\"text\"\n                            value={firstname}\n                            valcheck={valcheck.firstname}\n                            touched={touched.firstName}\n                            onBlur={handleBlur}\n                            onChange={(event) => setFirstname(event.target.value)} />\n                        <Input name=\"Last Name\"\n                            id=\"lastName\" type=\"text\"\n                            value={lastname}\n                            valcheck={valcheck.lastname}\n                            touched={touched.lastName}\n                            onBlur={handleBlur}\n                            onChange={(event) => setLastname(event.target.value)} />\n                    </div>\n                    <div className=\"row col\">\n                        <Input name=\"E-mail\"\n                            id=\"email\" type=\"email\"\n                            value={email}\n                            valcheck={valcheck.email}\n                            touched={touched.email}\n                            onBlur={handleBlur}\n                            onChange={(event) => setEmail(event.target.value)} />\n                    </div>\n                    {/* 錯誤提示文字 */}\n                    <InputPassword name=\"password\"\n                        id=\"password\"\n                        value={password}\n                        valcheck={valcheck.password}\n                        touched={touched.password}\n                        onBlur={handleBlur}\n                        onChange={(event) => setPassword(event.target.value)} />\n                    <label htmlFor=\"account\" className=\"account\">\n                        <input type=\"checkbox\" className=\"input-check\"\n                            name=\"\" id=\"account\" checked={account}\n                            onChange={(event) => setAccount(event.target.checked)} />\n                        <span className=\"checkmark\"></span>\n                        By creating account, you agree to accept our Privacy Policy, Terms of Service and Notification\n                        settings.\n                    </label>\n                    <button type=\"button\" className=\"btn-default-fill\" onClick={onSubmit}>\n                        Create an Free Account!\n                    </button>\n                    <div className=\"row\">\n                        <span className=\"hint\">\n                            Already have an account? <div className=\"link\">Log in</div>\n                        </span>\n                    </div>\n                </form>\n            </div>\n        </>\n    )\n};\n\nexport default Cardbody;","import React, { useState} from 'react';\n// import logo from './logo.svg';\nimport './assets/style.css';\nimport CardHeader from './components/Cardheader';\nimport CardBody from './components/Cardbody';\n\nfunction App() {\n  const [formData, setFormData] = useState({\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: '',\n    checktype: false,\n  });\n  const handleFormdata = (val) => {\n    setFormData((prevFormData) => ({\n        ...prevFormData,\n        ...val,\n    }));\n  };\n\n  return (\n    <>\n      <div className=\"card\">\n        <CardHeader></CardHeader>\n        <CardBody formData={formData} handleChange={handleFormdata}></CardBody>\n      </div>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './assets/style.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}